{"version":3,"sources":["components/images/backgrounds/brickwall1.jpg","components/paint-color-button.js","components/images/sprayblackbottle.png","components/square-icon-button.js","components/reticle-button.js","components/images/backgrounds/brickwall2.jpg","components/images/backgrounds/brickwall3.jpg","components/images/backgrounds/brickwall4.jpg","components/images/backgrounds/brickwall5.jpg","components/images/backgrounds/brickwall6.jpg","components/images/backgrounds/brickwall7.jpg","components/images/backgrounds/brickwall8.jpg","components/images/backgrounds/brickwall9.jpg","components/background-options.js","components/canvas.js","App.js","reportWebVitals.js","index.js"],"names":["PaintColorButton","props","onClick","choosePaintColor","type","value","id","className","SquareIconButton","handleClick","icon","ReticleButton","chooseReticle","BackgroundButton","Fragment","src","alt","backgrounds","brickwall1","brickwall2","brickwall3","brickwall4","brickwall5","brickwall6","brickwall7","brickwall8","brickwall9","BackgroundOptions","backgroundComponents","i","currentImg","push","console","log","Canvas","draw","rest","canvasRef","useRef","useState","isPainting","setIsPainting","x","y","mousePosition","setMousePosition","paintColor","setPaintColor","reticleSize","setReticleSize","showBackgroundOptions","setShowBackgroundOptions","backgroundWall","setBackgroundWall","startPaint","useCallback","event","coordinates","getCoordinates","current","clientX","offsetLeft","pageY","offsetTop","paint","newMousePosition","drawLine","originalMousePosition","context","getContext","strokeStyle","lineCap","lineJoin","lineWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","beginPath","moveTo","lineTo","closePath","stroke","exitPaint","backgroundImg","Image","useEffect","onload","drawImage","size","width","height","addEventListener","removeEventListener","e","target","chooseReticleSize","ref","style","border","marginTop","name","onChange","savedImage","toDataURL","replace","window","location","href","clearRect","wall","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,MAA0B,uCCe1BA,GCfA,IDEU,SAAAC,GACrB,OAEI,wBACIC,QAASD,EAAME,iBACfC,KAAK,SACLC,MAAOJ,EAAMI,MACbC,GAAIL,EAAMK,GACVC,UAAU,mBEIPC,EAZU,SAAAP,GACrB,OACI,wBACIC,QAASD,EAAMQ,YACfL,KAAK,SACLC,MAAOJ,EAAMI,MACbE,UAAU,YAJd,SAKKN,EAAMS,QCKJC,EAZO,SAAAV,GAElB,OACI,wBACIC,QAASD,EAAMW,cACfR,KAAK,SACLC,MAAOJ,EAAMI,MACbC,GAAIL,EAAMK,GACVC,UAAU,iB,OCVP,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCcnCM,EAAmB,SAAAZ,GAMrB,OACI,cAAC,IAAMa,SAAP,UACI,qBACIZ,QAASD,EAAMC,QACfE,KAAK,SACLC,MAAOJ,EAAMI,MACbC,GAAIL,EAAMK,GACVC,UAAU,4BACVQ,IAAKd,EAAMK,GACXU,IAAKf,EAAMK,QAIrBW,EAAc,CAACC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,GA8BtGC,EA5BW,SAAC1B,GAEvB,IAFiC,EAE3B2B,EAAuB,GAEzBC,EAAI,EAJyB,cAMJZ,GANI,IAM7B,2BAAsC,CAAC,IAA5Ba,EAA2B,QAClCF,EAAqBG,KACjB,cAAC,EAAD,CAEAzB,GAAIwB,EACJ5B,QAASD,EAAMC,QACfG,MAAOJ,EAAMI,OAJb,mBACiBwB,KAMrBA,GAAG,EACPG,QAAQC,IAAI,cAAeH,IAhBE,8BAoB7B,OACA,sBAAKvB,UAAU,0BAAf,UACI,8FACCqB,MCmKMM,EApNJ,SAAAjC,GAOeA,EAAlBkC,KALR,IAKiBC,EAPG,YAOMnC,EAPN,UAQdoC,EAAYC,iBAAO,MARL,EASgBC,oBAAS,GATzB,mBASbC,EATa,KASDC,EATC,OAUsBF,mBARvB,CACjBG,EAAG,EACHC,EAAG,IAJe,mBAUbC,EAVa,KAUEC,EAVF,OAWgBN,mBAAS,QAXzB,mBAWbO,EAXa,KAWDC,EAXC,OAYkBR,mBAAS,MAZ3B,mBAYbS,EAZa,KAYAC,EAZA,OAasCV,oBAAS,GAb/C,mBAabW,EAba,KAaUC,EAbV,OAcwBZ,mBAASrB,GAdjC,mBAcbkC,EAda,KAcGC,EAdH,KAgBpBrB,QAAQC,IAAI,mBAAoBmB,GAChC,IAAME,EAAaC,uBAAa,SAACC,GAC/B,IAAMC,EAAcC,EAAeF,GAC/BC,IACFhB,GAAc,GACdI,EAAiBY,MAElB,IAEGC,EAAiB,SAACF,GACtB,GAAKnB,EAAUsB,QAGf,MAAO,CAACjB,EAAGc,EAAMI,QAAUvB,EAAUsB,QAAQE,WAAYlB,EAAEa,EAAMM,MAAQzB,EAAUsB,QAAQI,YAGvFC,EAAQT,uBAAa,SAACC,GAC1B,GAAIhB,EAAY,CACd,IAAMyB,EAAmBP,EAAeF,GACpCZ,GAAiBqB,IACnBC,EAAStB,EAAeqB,GACxBpB,EAAiBoB,OAGpB,CAACzB,EAAYI,IAEVsB,EAAW,SAACC,EAAuBF,GACvC,GAAK5B,EAAUsB,QAAf,CAGA,IAAMS,EAAU/B,EAAUsB,QAAQU,WAAW,MAEzCD,IACFA,EAAQE,YAAcxB,EACtBsB,EAAQG,QAAU,QAClBH,EAAQI,SAAW,QACnBJ,EAAQK,UAAYzB,EACpBoB,EAAQM,cAAgB,EACxBN,EAAQO,cAAgB,EACxBP,EAAQQ,WAAa,GACrBR,EAAQS,YAAc/B,EAEtBsB,EAAQU,YACRV,EAAQW,OAAOZ,EAAsBzB,EAAGyB,EAAsBxB,GAC9DyB,EAAQY,OAAOf,EAAiBvB,EAAGuB,EAAiBtB,GACpDyB,EAAQa,YACRb,EAAQc,YAGNC,EAAY5B,uBAAY,WAC5Bd,GAAc,KACb,IAGG2C,EAAgB,IAAIC,MAI1BC,qBAAU,WACR,GAAKjD,EAAUsB,QAAf,CAGA,IAAMS,EAAU/B,EAAUsB,QAAQU,WAAW,MAC7Ce,EAAcrE,IAAMqC,EACpBpB,QAAQC,IAAI,mBAAoBmD,GAChCA,EAAcG,OAAS,WACrBnB,EAAQoB,UAAUJ,EAAe,EAAG,EAAGnF,EAAMwF,KAAKC,MAAOzF,EAAMwF,KAAKE,YAEtE,CAACvC,IAIHkC,qBAAU,WACR,GAAKjD,EAAUsB,QAIf,OADAtB,EAAUsB,QAAQiC,iBAAiB,YAAatC,GACzC,WACLjB,EAAUsB,QAAQkC,oBAAoB,YAAavC,MAEpD,CAACA,IAGJgC,qBAAU,WACR,GAAKjD,EAAUsB,QAIf,OADAtB,EAAUsB,QAAQiC,iBAAiB,YAAa5B,GACzC,WACL3B,EAAUsB,QAAQkC,oBAAoB,YAAa7B,MAEpD,CAACA,IAGJsB,qBAAU,WACR,GAAKjD,EAAUsB,QAKf,OAFAtB,EAAUsB,QAAQiC,iBAAiB,UAAWT,GAC9C9C,EAAUsB,QAAQiC,iBAAiB,aAAcT,GAC1C,WACL9C,EAAUsB,QAAQkC,oBAAoB,UAAWV,GACjD9C,EAAUsB,QAAQkC,oBAAoB,aAAcV,MAErD,CAACA,IAGJ,IAwBMhF,EAAmB,SAAC2F,GACxB/C,EAAc+C,EAAEC,OAAO1F,QAGnB2F,EAAoB,SAACF,GACzB7C,EAAe6C,EAAEC,OAAO1F,QAYxB,OACE,eAAC,IAAMS,SAAP,WACE,qBAAKP,UAAU,YAAf,SACE,oCACED,GAAG,WACHC,UAAU,QACV0F,IAAK5D,EACLqD,MAAOzF,EAAMwF,KAAKC,MAClBC,OAAQ1F,EAAMwF,KAAKE,OAKnBO,MAAO,CACLC,OAAQ,iBACRC,UAAW,KAEThE,MAER,sBAAK9B,GAAG,wBAAR,UACI,sBAAKA,GAAG,sBAAR,UACI,cAAC,EAAD,CAAkBH,iBAAkBA,EAAkBE,MAAM,OAAOC,GAAG,gBACtE,cAAC,EAAD,CAAkBH,iBAAkBA,EAAkBE,MAAM,MAAMC,GAAG,eACrE,cAAC,EAAD,CAAkBH,iBAAkBA,EAAkBE,MAAM,QAAQC,GAAG,iBACvE,cAAC,EAAD,CAAkBH,iBAAkBA,EAAkBE,MAAM,SAASC,GAAG,kBACxE,uBAAO+F,KAAK,eAAejG,KAAK,QAAQC,MAAOyC,EAAYwD,SAAU,SAAAR,GAAC,OAAE/C,EAAc+C,EAAEC,OAAO1F,QAAQC,GAAG,sBAAsBC,UAAU,oBAE9I,sBAAKD,GAAG,qBAAR,UACI,cAAC,EAAD,CAAkBG,YArEN,WAGxB,IAAM8F,EAAalE,EAAUsB,QAAQ6C,UAAU,aAAaC,QAAQ,YAAa,sBACjFC,OAAOC,SAASC,KAAKL,GAiEyClG,MAAM,eAAeK,KAAM,mBAAGH,UAAU,kBAC1F,cAAC,EAAD,CAAkBE,YAvDL,WACzB,IAAM2D,EAAU/B,EAAUsB,QAAQU,WAAW,MAC7CD,EAAQyC,UAAU,EAAG,EAAG5G,EAAMwF,KAAKC,MAAOzF,EAAMwF,KAAKE,QACrDP,EAAcrE,IAAMqC,EACpBgC,EAAcG,OAAS,WACrBnB,EAAQoB,UAAUJ,EAAe,EAAG,EAAGnF,EAAMwF,KAAKC,MAAOzF,EAAMwF,KAAKE,UAkDPtF,MAAM,gBAAgBK,KAAM,mBAAGH,UAAU,uBAC5F,wBAAQL,QAvCU,SAAC4F,GAC/B3C,EAAyB2C,EAAEC,OAAO1F,QAsCoBD,KAAK,SAASC,MAAM,OAAOC,GAAG,eAAeC,UAAS,oBAAe2C,EAAuB,kBAAmB,SAG7J,sBAAK5C,GAAG,sBAAR,UACI,cAAC,EAAD,CAAeM,cAAeoF,EAAmB3F,MAAM,KAAKC,GAAG,gBAC/D,cAAC,EAAD,CAAeM,cAAeoF,EAAmB3F,MAAM,KAAKC,GAAG,iBAC/D,cAAC,EAAD,CAAeM,cAAeoF,EAAmB3F,MAAM,KAAKC,GAAG,sBAGvE,8BACG4C,GAAyB,cAAC,EAAD,CAAmBhD,QA7C5B,SAAC4G,GACxBzD,EAAkByD,EAAKf,OAAOzF,IAC9B6C,GAAyB,IA2CqD9C,MAAO+C,UCjM5E2D,MAdf,WAGE,OACE,sBAAKxG,UAAU,MAAf,UACE,qBAAKD,GAAG,aAAR,SAAqB,iDACrB,cAAC,EAAD,CAAQmF,KAJO,CAACC,MAAO,IAAKC,OAAQ,WCI3BqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.142acfdb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brickwall1.1b8f98a9.jpg\";","import React from 'react';\n\nconst PaintColorButton = props => {\n    return (\n\n        <button \n            onClick={props.choosePaintColor} \n            type=\"submit\" \n            value={props.value} \n            id={props.id}\n            className=\"paint-sample\"></button>\n        \n        );\n} \n\nexport default PaintColorButton\n\n","export default __webpack_public_path__ + \"static/media/sprayblackbottle.714b364b.png\";","import React from 'react';\n\nconst SquareIconButton = props => {\n    return (\n        <button \n            onClick={props.handleClick} \n            type=\"submit\" \n            value={props.value} \n            className=\"sq-button\">\n            {props.icon}\n            </button>\n        );\n}\n\nexport default SquareIconButton","import React from 'react';\n\nconst ReticleButton = props => {\n\n    return (\n        <button \n            onClick={props.chooseReticle} \n            type=\"submit\" \n            value={props.value}\n            id={props.id} \n            className=\"spraybottle\"></button>\n    );\n}\n\nexport default ReticleButton\n","export default __webpack_public_path__ + \"static/media/brickwall2.4b4745c4.jpg\";","export default __webpack_public_path__ + \"static/media/brickwall3.5d879e4c.jpg\";","export default __webpack_public_path__ + \"static/media/brickwall4.f106fa32.jpg\";","export default __webpack_public_path__ + \"static/media/brickwall5.bcdde784.jpg\";","export default __webpack_public_path__ + \"static/media/brickwall6.6bcb5651.jpg\";","export default __webpack_public_path__ + \"static/media/brickwall7.1b880d2b.jpg\";","export default __webpack_public_path__ + \"static/media/brickwall8.ada6006b.jpg\";","export default __webpack_public_path__ + \"static/media/brickwall9.fe691b9a.jpg\";","import { checkPropTypes } from 'prop-types';\nimport React from 'react';\n\nimport brickwall1 from \"./images/backgrounds/brickwall1.jpg\"\nimport brickwall2 from \"./images/backgrounds/brickwall2.jpg\"\nimport brickwall3 from \"./images/backgrounds/brickwall3.jpg\"\nimport brickwall4 from \"./images/backgrounds/brickwall4.jpg\"\nimport brickwall5 from \"./images/backgrounds/brickwall5.jpg\"\nimport brickwall6 from \"./images/backgrounds/brickwall6.jpg\"\nimport brickwall7 from \"./images/backgrounds/brickwall7.jpg\"\nimport brickwall8 from \"./images/backgrounds/brickwall8.jpg\"\nimport brickwall9 from \"./images/backgrounds/brickwall9.jpg\"\n\n\nconst BackgroundButton = props => {\n\n    const handleClick = (e) => {\n        props.onClick(e.target.value);\n    };\n\n    return (\n        <React.Fragment>\n            <img\n                onClick={props.onClick} \n                type=\"submit\" \n                value={props.value} \n                id={props.id}\n                className=\"background-options-button\"\n                src={props.id}\n                alt={props.id} />\n        </React.Fragment>\n        );\n} \nconst backgrounds = [brickwall1, brickwall2, brickwall3, brickwall4, brickwall5, brickwall6, brickwall7, brickwall8, brickwall9]\n\nconst BackgroundOptions = (props) => {\n\n    const backgroundComponents = []; \n    \n    let i = 1\n    // for (let i=1; i<10; i++) {\n        for (const currentImg of backgrounds) {\n            backgroundComponents.push(\n                <BackgroundButton \n                key={`brickwall${i}`}\n                id={currentImg}\n                onClick={props.onClick}\n                value={props.value}\n                />\n            );\n            i+=1;\n        console.log(\"currentImg:\", currentImg)\n        }; \n    \n    \n        return (\n        <div className=\"brick-backgrounds-panel\">\n            <p>To start over with a new brick background, select from below:</p>\n            {backgroundComponents}\n        </div>\n    );\n}\n\nexport default BackgroundOptions\n\n    // selectedWall = onclick on a wall option, grab (e.target.value)\n    // setBackgroundWall(selectedWall);\n    // }\n","import React, { useRef, useEffect, useState, useCallback } from 'react';\n//import './App.css';\nimport brickwall1 from \"./images/backgrounds/brickwall1.jpg\"\nimport spraybottle from \"./images/sprayblackbottle.png\"\nimport PaintColorButton from \"./paint-color-button\"\nimport SquareIconButton from \"./square-icon-button\"\nimport ReticleButton from \"./reticle-button\"\nimport BackgroundOptions from \"./background-options\"\n\nconst Canvas = props => {\n\n    const Coordinate = {\n      x: 0,\n      y: 0,\n    }\n  \n    const { draw, ...rest } = props;\n    const canvasRef = useRef(null);\n    const [isPainting, setIsPainting] = useState(false);\n    const [mousePosition, setMousePosition] = useState(Coordinate);  \n    const [paintColor, setPaintColor] = useState('blue');\n    const [reticleSize, setReticleSize] = useState('10');\n    const [showBackgroundOptions, setShowBackgroundOptions] = useState(false);\n    const [backgroundWall, setBackgroundWall] = useState(brickwall1);\n    \n    console.log(\"background wall:\", backgroundWall)\n    const startPaint = useCallback ((event) => {\n      const coordinates = getCoordinates(event);\n      if (coordinates) {\n        setIsPainting(true);\n        setMousePosition(coordinates);\n      }\n    }, []);\n  \n    const getCoordinates = (event) => {\n      if (!canvasRef.current) {\n        return \n      };\n      return {x: event.clientX - canvasRef.current.offsetLeft, y:event.pageY - canvasRef.current.offsetTop};\n    }\n  \n    const paint = useCallback ((event) => {\n      if (isPainting) {\n        const newMousePosition = getCoordinates(event);\n        if (mousePosition && newMousePosition) {\n          drawLine(mousePosition, newMousePosition);\n          setMousePosition(newMousePosition);\n        }\n      }\n    }, [isPainting, mousePosition]);\n  \n    const drawLine = (originalMousePosition, newMousePosition) => {\n      if (!canvasRef.current) {\n        return\n      };\n      const context = canvasRef.current.getContext(\"2d\");\n      \n      if (context) {\n        context.strokeStyle = paintColor;\n        context.lineCap = 'round';\n        context.lineJoin = 'round';\n        context.lineWidth = reticleSize;\n        context.shadowOffsetX = 5;\n        context.shadowOffsetY = 5;\n        context.shadowBlur = 15;\n        context.shadowColor = paintColor;\n  \n        context.beginPath();\n        context.moveTo(originalMousePosition.x, originalMousePosition.y);\n        context.lineTo(newMousePosition.x, newMousePosition.y);\n        context.closePath();\n        context.stroke();\n      }\n    }\n    const exitPaint = useCallback(() => {\n      setIsPainting(false);\n    }, []);\n  \n    //Load canvas 2D context/surface on the canvas element/node and background img\n    const backgroundImg = new Image() //Create new img element\n    //console.log(\"background img: \", backgroundImg)\n    //console.log(\"backgroundWall: \", backgroundWall)\n    \n    useEffect(() => {\n      if (!canvasRef.current) {\n        return\n      };\n      const context = canvasRef.current.getContext(\"2d\");\n      backgroundImg.src = backgroundWall; //Set source path\n      console.log(\"background img: \", backgroundImg);\n      backgroundImg.onload = () => {\n        context.drawImage(backgroundImg, 0, 0, props.size.width, props.size.height);\n      }; \n    },[backgroundWall]);  \n  \n    //Start drawing when mouse is pressed downward\n    //When event (mousedown) is on target (Canvas node), call function\n    useEffect(() => {\n      if (!canvasRef.current) {\n        return\n      };\n      canvasRef.current.addEventListener('mousedown', startPaint);\n      return () => {\n        canvasRef.current.removeEventListener('mousedown', startPaint);\n      }\n    }, [startPaint]);\n  \n    //Draw line on mouse move\n    useEffect(() => {\n      if (!canvasRef.current) {\n        return\n      };\n      canvasRef.current.addEventListener('mousemove', paint);\n      return () => {\n        canvasRef.current.removeEventListener('mousemove', paint);\n      }\n    }, [paint]);\n  \n    //Stop drawing on mouse release\n    useEffect(() => {\n      if (!canvasRef.current) {\n        return\n      };\n      canvasRef.current.addEventListener('mouseup', exitPaint);\n      canvasRef.current.addEventListener('mouseleave', exitPaint);\n      return () => {\n        canvasRef.current.removeEventListener('mouseup', exitPaint);\n        canvasRef.current.removeEventListener('mouseleave', exitPaint);\n      }\n    }, [exitPaint]);\n  \n  \n    const handleSaveDrawing = () => {\n      //const canvasToSave = document.getElementById(\"mycanvas\")\n      //Convert image to 'octet-stream' (Just a download)\n      const savedImage = canvasRef.current.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n      window.location.href=savedImage;\n      //const savedImage = canvasRef.current.toDataURL();\n    //   const savedImageName = \"GraffitiWall\";\n    //   document.createElement(\"a\").href = savedImage;\n    //   document.createElement(\"a\").target = \"_blank\";\n    //   document.createElement(\"a\").download = savedImageName;\n    //   const evt = document.createEvent(\"MouseEvents\");\n    //   evt.initMouseEvent(\"click\", true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n    //   document.createElement(\"a\").dispatchEvent(evt);\n    };\n  \n    const handleClearDrawing = () => {\n      const context = canvasRef.current.getContext(\"2d\");\n      context.clearRect(0, 0, props.size.width, props.size.height);\n      backgroundImg.src = backgroundWall;\n      backgroundImg.onload = () => {\n        context.drawImage(backgroundImg, 0, 0, props.size.width, props.size.height);\n      };\n    };\n\n    const choosePaintColor = (e) => {\n      setPaintColor(e.target.value);\n    };\n    \n    const chooseReticleSize = (e) => {\n      setReticleSize(e.target.value);\n    }\n\n    const toggleBackgroundOptions = (e) => {\n      setShowBackgroundOptions(e.target.value);\n    }\n\n    const updateBackground = (wall) => {\n      setBackgroundWall(wall.target.id);\n      setShowBackgroundOptions(false);\n    }\n\n      return ( \n        <React.Fragment> \n          <div className=\"main-view\">\n            <canvas \n              id=\"mycanvas\"\n              className=\"spray\"\n              ref={canvasRef} \n              width={props.size.width}\n              height={props.size.height}\n              // onmousedown={startPaint}\n              // onmouseup={exitPaint}\n              // onmouseleave={exitPaint}\n              // onmousemove={paint}\n              style={{\n                border: '2px solid #000',\n                marginTop: 10,\n              }}\n              {...rest}/>\n          </div>\n          <div id=\"paint-options-content\">\n              <div id=\"paint-color-options\">\n                  <PaintColorButton choosePaintColor={choosePaintColor} value=\"blue\" id=\"blue-button\"/>\n                  <PaintColorButton choosePaintColor={choosePaintColor} value=\"red\" id=\"red-button\"/>\n                  <PaintColorButton choosePaintColor={choosePaintColor} value=\"green\" id=\"green-button\"/>\n                  <PaintColorButton choosePaintColor={choosePaintColor} value=\"yellow\" id=\"yellow-button\"/>\n                  <input name=\"Color Picker\" type=\"color\" value={paintColor} onChange={e=>setPaintColor(e.target.value)} id=\"custom-color-button\" className=\"paint-sample\"/>\n              </div>\n              <div id=\"save-clear-options\">\n                  <SquareIconButton handleClick={handleSaveDrawing} value=\"save-drawing\" icon={<i className=\"far fa-save\"></i>} />\n                  <SquareIconButton handleClick={handleClearDrawing} value=\"clear-drawing\" icon={<i className=\"fas fa-trash-alt\"></i>}/>\n                  <button onClick={toggleBackgroundOptions} type=\"submit\" value=\"true\" id=\"brick-button\" className={`sq-button ${showBackgroundOptions? \"selected-button\": \"\"}`}></button>\n              </div>\n              \n              <div id=\"spray-width-options\">\n                  <ReticleButton chooseReticle={chooseReticleSize} value=\"10\" id=\"small-spray\" />\n                  <ReticleButton chooseReticle={chooseReticleSize} value=\"20\" id=\"medium-spray\" />\n                  <ReticleButton chooseReticle={chooseReticleSize} value=\"35\" id=\"large-spray\" />                    \n              </div>\n          </div>\n          <div>\n            {showBackgroundOptions && <BackgroundOptions onClick={updateBackground} value={backgroundWall} /> }\n          </div>\n        \n        </React.Fragment>\n      )\n    }\n\n\n    export default Canvas","\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport './App.css';\nimport Canvas from \"./components/canvas\";\n\n\nfunction App() {\n  \n  const canvasSize = {width: 700, height: 490};\n  return (\n    <div className=\"App\">\n      <div id=\"header-div\"><h1>Graffiti Wall</h1></div>\n      <Canvas size={canvasSize}/>\n      {/* <SprayOptions /> */}\n    </div>\n  );\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}